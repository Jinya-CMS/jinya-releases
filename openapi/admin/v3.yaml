openapi: 3.0.3
info:
  title: Jinya Releases
  description: Jinya Releases
  version: 3.0.0
  license:
    name: MIT
    url: https://github.com/Jinya-CMS/jinya-releases/blob/main/LICENSE
  x-logo:
    url: >-
      https://raw.githubusercontent.com/Jinya-CMS/jinya-releases/main/static/favicon.png
    backgroundColor: '#FFFFFF'
    altText: Jinya Releases logo
servers:
  - url: 'https://releases.jinya.de'
    description: Jinya Releases production instance
security:
  - accessToken: [ ]
tags:
  - name: application
    x-displayName: Application
  - name: track
    x-displayName: Track
  - name: version
    x-displayName: Version
  - name: push-token
    x-displayName: Push token
paths:
  /api/admin/application:
    post:
      operationId: create_application
      security:
        - accessToken: [ ]
      summary: Create application
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-application'
      responses:
        '201':
          description: Created new application
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
        '409':
          description: Application already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
    get:
      operationId: get_all_applications
      security:
        - accessToken: [ ]
      summary: Get all applications
      tags:
        - application
      responses:
        '200':
          description: A list of all applications
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/application'
  /api/admin/application/{id}:
    get:
      operationId: get_application_by_id
      security:
        - accessToken: [ ]
      summary: Get application by id
      tags:
        - application
      responses:
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '200':
          description: The application with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/application'
    put:
      operationId: update_application
      security:
        - accessToken: [ ]
      summary: Update application
      tags:
        - application
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-application'
      responses:
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '409':
          description: Application already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '204':
          description: Updated the application with the given id
    delete:
      operationId: delete_application
      security:
        - accessToken: [ ]
      summary: Delete Application
      tags:
        - application
      responses:
        '404':
          description: The application was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '204':
          description: Application successfully deleted
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
  /api/admin/application/{id}/logo:
    post:
      operationId: upload_application_logo
      security:
        - accessToken: [ ]
      summary: Upload application logo
      tags:
        - application
      requestBody:
        required: true
        content:
          image/apng:
            schema:
              type: string
              format: binary
          image/avif:
            schema:
              type: string
              format: binary
          image/gif:
            schema:
              type: string
              format: binary
          image/jpeg:
            schema:
              type: string
              format: binary
          image/png:
            schema:
              type: string
              format: binary
          image/svg+xml:
            schema:
              type: string
              format: binary
          image/webp:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Upload successful
        '404':
          description: The application was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '409':
          description: Error writing the file
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '415':
          description: Unsupported image type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
  /api/admin/application/{applicationId}/track:
    post:
      operationId: create_new_track
      security:
        - accessToken: [ ]
      summary: Create track
      tags:
        - track
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-track'
      responses:
        '400':
          description: Track name or slug missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '404':
          description: The application was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '409':
          description: Track already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '201':
          description: Created new track
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/track'
    get:
      operationId: get_all_tracks
      security:
        - accessToken: [ ]
      summary: Get all tracks
      tags:
        - track
      responses:
        '404':
          description: Application not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '200':
          description: A list of all tracks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/track'
    parameters:
      - name: applicationId
        required: true
        in: path
        schema:
          type: string
  /api/admin/application/{applicationId}/track/{id}:
    get:
      operationId: get_track_by_id
      security:
        - accessToken: [ ]
      summary: Get track by id
      tags:
        - track
      responses:
        '404':
          description: Application or track not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '200':
          description: Get track by id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/track'
    put:
      operationId: update_track
      security:
        - accessToken: [ ]
      summary: Update track
      tags:
        - track
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-track'
      responses:
        '400':
          description: Track name or slug missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '404':
          description: Application or track not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '409':
          description: Track already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '204':
          description: Update the track with the given id
    delete:
      operationId: delete_track
      security:
        - accessToken: [ ]
      summary: Delete track
      tags:
        - track
      responses:
        '404':
          description: Application or track not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '204':
          description: Track successfully deleted
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      - name: applicationId
        required: true
        in: path
        schema:
          type: string
  /api/admin/application/{applicationId}/track/{trackId}/version:
    post:
      operationId: create_version
      security:
        - accessToken: [ ]
      summary: Create version
      tags:
        - version
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-version'
      responses:
        '400':
          description: Version missing
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '404':
          description: Application, track or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '409':
          description: Version already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '201':
          description: Created new version
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/version'
    get:
      operationId: get_all_versions
      security:
        - accessToken: [ ]
      summary: Get all versions
      tags:
        - version
      responses:
        '404':
          description: Application, track or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '200':
          description: A list of all versions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/version'
    parameters:
      - name: applicationId
        required: true
        in: path
        schema:
          type: string
      - name: trackId
        required: true
        in: path
        schema:
          type: string
  /api/admin/application/{applicationId}/track/{trackId}/version/{id}:
    get:
      operationId: get_version_by_id
      security:
        - accessToken: [ ]
      summary: Get version by id
      tags:
        - version
      responses:
        '404':
          description: Application, track or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '200':
          description: The version with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/version'
    delete:
      operationId: delete_version
      security:
        - accessToken: [ ]
      summary: Delete version
      tags:
        - version
      responses:
        '404':
          description: Application, track or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '409':
          description: File could not be deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '204':
          description: Version successfully deleted
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      - name: applicationId
        required: true
        in: path
        schema:
          type: string
      - name: trackId
        required: true
        in: path
        schema:
          type: string
  /api/admin/application/{applicationId}/track/{trackId}/version/{id}/file:
    post:
      operationId: upload_version_artifact
      security:
        - accessToken: [ ]
      summary: Upload version artifact binary
      tags:
        - version
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '201':
          description: Upload successful
        '404':
          description: Application, track or version not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '409':
          description: File already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
      - name: applicationId
        required: true
        in: path
        schema:
          type: string
      - name: trackId
        required: true
        in: path
        schema:
          type: string
  /api/admin/push-token:
    post:
      operationId: create_push_token
      security:
        - accessToken: [ ]
      summary: Create push token
      tags:
        - push-token
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/create-token'
      responses:
        '201':
          description: Created new push token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push-token'
        '404':
          description: App or Track not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
    get:
      operationId: get_all_push_tokens
      security:
        - accessToken: [ ]
      summary: Get all push tokens
      tags:
        - push-token
      responses:
        '200':
          description: A list of all push tokens
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/push-token'
  /api/admin/push-token/{id}:
    get:
      operationId: get_push_token_by_id
      security:
        - accessToken: [ ]
      summary: Get push token by id
      tags:
        - push-token
      responses:
        '404':
          description: Push token not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '200':
          description: The push token with the given id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/push-token'
    put:
      operationId: update_push_token
      security:
        - accessToken: [ ]
      summary: Update push token
      tags:
        - push-token
      responses:
        '404':
          description: Push token, app or track not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '204':
          description: The push token was updated
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update-token'
    delete:
      operationId: delete_push_token
      security:
        - accessToken: [ ]
      summary: Delete push token
      tags:
        - push-token
      responses:
        '404':
          description: The push token was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error-details'
        '204':
          description: push token successfully deleted
    parameters:
      - name: id
        required: true
        in: path
        schema:
          type: string
components:
  securitySchemes:
    accessToken:
      type: http
      scheme: Bearer
  schemas:
    create-application:
      title: Create Application request
      type: object
      required:
        - name
        - slug
        - homepageTemplate
        - trackpageTemplate
      properties:
        name:
          type: string
        slug:
          type: string
        homepageTemplate:
          type: string
        trackpageTemplate:
          type: string
        additionalCss:
          type: string
        additionalJavaScript:
          type: string
    update-application:
      title: Update Application request
      type: object
      required:
        - name
        - slug
        - homepageTemplate
        - trackpageTemplate
      properties:
        name:
          type: string
        slug:
          type: string
        homepageTemplate:
          type: string
        trackpageTemplate:
          type: string
        additionalCss:
          type: string
        additionalJavaScript:
          type: string
    application:
      title: Application
      type: object
      required:
        - id
        - name
        - slug
        - homepageTemplate
        - trackpageTemplate
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        logo:
          type: string
        homepageTemplate:
          type: string
        trackpageTemplate:
          type: string
        additionalCss:
          type: string
        additionalJavaScript:
          type: string
    create-track:
      title: Create Track request
      type: object
      required:
        - name
        - slug
        - isDefault
      properties:
        name:
          type: string
        slug:
          type: string
        isDefault:
          type: boolean
    update-track:
      title: Update Track request
      type: object
      required:
        - name
        - slug
        - isDefault
      properties:
        name:
          type: string
        slug:
          type: string
        isDefault:
          type: boolean
    track:
      title: Track
      type: object
      required:
        - id
        - name
        - slug
        - isDefault
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        slug:
          type: string
        isDefault:
          type: boolean
    version:
      title: Version
      type: object
      required: 
        - version
      properties: 
        id:
          type: string
          format: uuid
        version:
          type: string
        url:
          type: string
        uploadDate:
          type: string
          format: date
    create-version:
      title: Create Version request
      type: object
      required:
        - version
      properties:
        version:
          type: string
    create-token:
      title: Create push token request
      type: object
      properties:
        allowedApps:
          type: array
          items:
            type: string
            format: uuid
        allowedTracks:
          type: array
          items:
            type: string
            format: uuid
    update-token:
      title: Update push token request
      type: object
      properties:
        allowedApps:
          type: array
          items:
            type: string
            format: uuid
        allowedTracks:
          type: array
          items:
            type: string
            format: uuid
    push-token:
      title: push token
      type: object
      required:
        - token
      properties:
        id:
          type: string
          format: uuid
        token:
          type: string
          format: uuid
        allowedApps:
          type: array
          items:
            type: string
            format: uuid
        allowedTracks:
          type: array
          items:
            type: string
            format: uuid
    error-details:
      title: Root Type for ErrorDetails
      type: object
      properties:
        entityType:
          type: string
          enum:
            - application
            - track
            - version
            - token
        errorType:
          type: string
        message:
          type: string
      required:
        - entityType
        - errorType
        - message
