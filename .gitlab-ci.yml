workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_PIPELINE_SOURCE == "push"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

stages:
  - lint
  - test
  - build
  - deploy

.base-docker:
  image: registry.ulbricht.casa/docker-images/buildah:latest
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | buildah login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - echo "$DOCKERHUB_PASSWORD" | buildah login -u "$DOCKERHUB_USER" --password-stdin docker.io

lint:
  image: oven/bun:latest
  stage: lint
  script:
    - bun install -f
    - bun run lint

build:
  image: library/golang:1.24-alpine
  stage: build
  script:
    - go vet .
    - go build -o $CI_PROJECT_DIR/$ARCH/jinya-releases
  artifacts:
    paths:
      - $CI_PROJECT_DIR/$ARCH/jinya-releases
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-${ARCH}

docker-build-test:
  stage: deploy
  extends: .base-docker
  script:
    - buildah build --platform=linux/$ARCH $CI_PROJECT_DIR/$ARCH
  rules:
    - if: $CI_COMMIT_BRANCH
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-$ARCH

docker-build:
  stage: deploy
  extends: .base-docker
  variables:
    IMG: $CI_REGISTRY_IMAGE/$ARCH:$CI_COMMIT_TAG
  script:
    - buildah build --platform=linux/$ARCH -t $IMG $CI_PROJECT_DIR/$ARCH
    - buildah push $IMG
  rules:
    - if: $CI_COMMIT_TAG
  parallel:
    matrix:
      - ARCH: amd64
      - ARCH: arm64
  tags:
    - runner-${ARCH}

merge-manifests:
  stage: deploy
  extends: .base-docker
  needs:
    - job: docker-build
      artifacts: false
  script:
    - buildah manifest create $FQ_IMAGE_NAME
    - buildah manifest add $FQ_IMAGE_NAME docker://$CI_REGISTRY_IMAGE/amd64:$CI_COMMIT_TAG
    - buildah manifest add $FQ_IMAGE_NAME docker://$CI_REGISTRY_IMAGE/arm64:$CI_COMMIT_TAG
    - buildah manifest push --all $FQ_IMAGE_NAME
  parallel:
    matrix:
      - FQ_IMAGE_NAME: $CI_REGISTRY_IMAGE:latest
      - FQ_IMAGE_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
      - FQ_IMAGE_NAME: docker.io/jinyacms/jinya-releases:latest
      - FQ_IMAGE_NAME: docker.io/jinyacms/jinya-releases:$CI_COMMIT_TAG
  rules:
    - if: $CI_COMMIT_TAG

trigger-server:
  needs:
    - job: merge-manifests
  variables:
    TAG: $CI_COMMIT_TAG
  stage: deploy
  trigger: server-management/main-server.ulbricht.casa/releases.jinya.de
  rules:
    - if: $CI_COMMIT_TAG